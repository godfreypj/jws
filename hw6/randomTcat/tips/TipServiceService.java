
package tips;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "TipServiceService", targetNamespace = "http://tips/", wsdlLocation = "http://localhost:8080/tips?wsdl")
public class TipServiceService
        extends Service {

    private final static URL TIPSERVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException TIPSERVICESERVICE_EXCEPTION;
    private final static QName TIPSERVICESERVICE_QNAME = new QName("http://tips/", "TipServiceService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/tips?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        TIPSERVICESERVICE_WSDL_LOCATION = url;
        TIPSERVICESERVICE_EXCEPTION = e;
    }

    public TipServiceService() {
        super(__getWsdlLocation(), TIPSERVICESERVICE_QNAME);
    }

    public TipServiceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), TIPSERVICESERVICE_QNAME, features);
    }

    public TipServiceService(URL wsdlLocation) {
        super(wsdlLocation, TIPSERVICESERVICE_QNAME);
    }

    public TipServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, TIPSERVICESERVICE_QNAME, features);
    }

    public TipServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TipServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *         returns TipService
     */
    @WebEndpoint(name = "TipServicePort")
    public TipServiceInterface getTipServicePort() {
        return super.getPort(new QName("http://tips/", "TipServicePort"), TipServiceInterface.class);
    }

    /**
     * 
     * @param features
     *                 A list of {@link javax.xml.ws.WebServiceFeature} to configure
     *                 on the proxy. Supported features not in the
     *                 <code>features</code> parameter will have their default
     *                 values.
     * @return
     *         returns TipService
     */
    @WebEndpoint(name = "TipServicePort")
    public TipServiceInterface getTipServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://tips/", "TipServicePort"), TipServiceInterface.class, features);
    }

    private static URL __getWsdlLocation() {
        if (TIPSERVICESERVICE_EXCEPTION != null) {
            throw TIPSERVICESERVICE_EXCEPTION;
        }
        return TIPSERVICESERVICE_WSDL_LOCATION;
    }

}
